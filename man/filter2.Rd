% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filter2.R
\name{filter2}
\alias{filter2}
\title{Return rows with matching conditions and print diagnostics}
\usage{
filter2(.data, ..., .verbose = TRUE)
}
\arguments{
\item{.data}{A tbl. All main verbs are S3 generics and provide methods
for \code{\link[=tbl_df]{tbl_df()}}, \code{\link[dtplyr:tbl_dt]{dtplyr::tbl_dt()}} and \code{\link[dbplyr:tbl_dbi]{dbplyr::tbl_dbi()}}.}

\item{...}{Logical predicates defined in terms of the variables in \code{.data}.
Multiple conditions are combined with \code{&}. Only rows where the
condition evaluates to \code{TRUE} are kept.

These arguments are automatically \link[rlang:quo]{quoted} and
\link[rlang:eval_tidy]{evaluated} in the context of the data
frame. They support \link[rlang:quasiquotation]{unquoting} and
splicing. See \code{vignette("programming")} for an introduction to
these concepts.}

\item{.verbose}{print diagnostics? Defaults to TRUE}
}
\value{
a data frame
}
\description{
At this point, `filter2` only works on data.frame objects, rather than the
full set of `dplyr::filter`-able objects.
}
\examples{
filter2(dplyr::starwars, gender == "female", height < 170)
filter2(dplyr::starwars, gender == "female" | height < 170)
}
